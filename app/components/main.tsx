"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/yoUa0S8t4oT
 */
import { TabsTrigger, TabsList, TabsContent, Tabs } from "@/components/ui/tabs";
import { Label } from "@/components/ui/label";
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectGroup,
  SelectContent,
  Select,
} from "@/components/ui/select";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { createOffer, receiveOffer, getQrUrl } from "@/lib/api";
import { FormEvent, useState } from "react";
import { HighLight } from "./highLight";

export function Main() {
  const [credentialType, setCredentialType] = useState<string>(
    "AnimoOpenId4VcPlayground"
  );
  const [qrUri, setQrUri] = useState<string>();
  const [credentialOfferUri, setCredentialOfferUri] = useState<string>();
  const [receiveCredentialOfferUri, setReceiveCredentialOfferUri] =
    useState<string>();
  const [receivedCredentials, setReceivedCredentials] = useState();

  async function onSubmitIssueCredential(e: FormEvent) {
    e.preventDefault();
    const offer = await createOffer(credentialType);
    setQrUri(getQrUrl(offer.credentialOfferUri));
    setCredentialOfferUri(offer.credentialOfferUri);
  }

  async function onSubmitReceiveOffer(e: FormEvent) {
    e.preventDefault();
    if (!receiveCredentialOfferUri) return;

    setReceivedCredentials(await receiveOffer(receiveCredentialOfferUri));
  }

  return (
    <>
      <main
        key="1"
        className="flex flex-col min-h-screen bg-gray-100 dark:bg-gray-900"
      >
        <div className="flex items-center justify-between bg-gray-100 w-full p-4">
          <div className="flex items-center">
            {/* eslint-disable-next-line @next/next/no-img-element */}
            <img
              alt="Logo"
              className="w-120 h-20"
              height="50"
              src="/logo.svg"
              style={{
                objectFit: "contain",
              }}
              width="200"
            />
          </div>
          <span className="inline-block bg-green-500 text-white text-sm px-2 py-1 rounded-full">
            Playground
          </span>
        </div>
        <div className="flex w-full items-center justify-center ">
          <Tabs className="w-full max-w-5xl px-6" defaultValue="issue">
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="issue">Issue</TabsTrigger>
              <TabsTrigger value="receive">Receive</TabsTrigger>
            </TabsList>
            <TabsContent value="issue">
              <Card className="p-6">
                <form className="space-y-4" onSubmit={onSubmitIssueCredential}>
                  <div className="space-y-2">
                    <Label htmlFor="credential-type">Credential Type</Label>
                    <Select
                      name="credential-type"
                      required
                      onValueChange={setCredentialType}
                      defaultValue="AnimoOpenId4VcPlayground"
                    >
                      <SelectTrigger className="w-[320px]">
                        <SelectValue placeholder="Select a credential type" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectGroup>
                          <SelectItem value="AnimoOpenId4VcPlayground">
                            Playground Example - SD-JWT-VC
                          </SelectItem>
                        </SelectGroup>
                      </SelectContent>
                    </Select>
                  </div>
                  <div className="flex justify-center items-center bg-gray-200 dark:bg-gray-800 min-h-64 w-full rounded-md">
                    {qrUri && credentialOfferUri ? (
                      <p
                        onClick={(e) =>
                          navigator.clipboard.writeText(
                            e.currentTarget.innerText
                          )
                        }
                        className="m-5 text-gray-500 dark:text-gray-400 break-all"
                      >
                        {credentialOfferUri}
                      </p>
                    ) : (
                      <p className="text-gray-500 dark:text-gray-400 break-all">
                        Credential offer will be displayed here
                      </p>
                    )}
                  </div>
                  <Button
                    onClick={onSubmitIssueCredential}
                    className="w-full"
                    onSubmit={onSubmitIssueCredential}
                  >
                    Issue Credential
                  </Button>
                </form>
              </Card>
            </TabsContent>
            <TabsContent value="receive">
              <Card className="p-6">
                <form className="space-y-4" onSubmit={onSubmitReceiveOffer}>
                  <div className="space-y-2">
                    <Label htmlFor="credential-offer-uri">
                      Credential Offer URI
                    </Label>
                    <textarea
                      className="w-full h-20 p-2 rounded-md bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700"
                      id="credential-offer-uri"
                      required
                      onChange={(e) =>
                        setReceiveCredentialOfferUri(e.currentTarget.value)
                      }
                    />
                  </div>
                  <div className="flex justify-center items-center bg-gray-200 dark:bg-gray-800 min-h-64 w-full rounded-md">
                    {receivedCredentials ? (
                      <HighLight
                        code={JSON.stringify(receivedCredentials, null, 2)}
                        language="json"
                      />
                    ) : (
                      <p className="text-gray-500 dark:text-gray-400">
                        JSON content of the credential will be displayed here
                      </p>
                    )}
                  </div>
                  <Button
                    className="w-full"
                    onClick={onSubmitReceiveOffer}
                    onSubmit={onSubmitReceiveOffer}
                  >
                    Receive Credential
                  </Button>
                </form>
              </Card>
            </TabsContent>
          </Tabs>
        </div>
      </main>
    </>
  );
}
